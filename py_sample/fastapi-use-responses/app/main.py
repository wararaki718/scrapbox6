# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2023-07-30T12:41:25+00:00

from __future__ import annotations

from typing import Union

from fastapi import FastAPI
from fastapi.exceptions import RequestValidationError
from fastapi.responses import JSONResponse
from starlette.requests import Request

from .schema import Message, MessageError, Reply, CustomHTTPValidationError

api = FastAPI(
    version='1.0.0',
    title='communication application',
    servers=[{'url': 'http://localhost:8000', 'description': 'local'}],
)

@api.exception_handler(RequestValidationError)
async def validation_exception_handler(request: Request, exc: RequestValidationError):
    print()
    print(exc)
    print(type(exc))
    print(exc.raw_errors)
    print()
    print(type(request))
    print()
    return JSONResponse(status_code=422, content={"msg": str(exc)})


@api.post(
    '/message',
    response_model=Reply,
    responses={
        '422': {"model": CustomHTTPValidationError},
        '500': {'model': MessageError},
    },
)
def list_pets(message: Message) -> Union[Reply, MessageError]:
    if message.content == "error":
        return JSONResponse(status_code=500, content={"msg":"message error", "type": "error"})
    
    return Reply(content="ok message")
